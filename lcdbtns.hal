loadusr -W lcdbtns count=1

# NOTE:
# all loadrts go in lcdbtns_loads.hal because we are using TWOWPASS
# and this file is loaded after the GUI is loaded
# see: https://linuxcnc.org/docs/html/hal/twopass.html#_post_gui

addf and2.pr servo-thread
addf and2.run servo-thread
addf or2.pr servo-thread
addf toggle.ok servo-thread
# pause/resume
addf toggle2nist.pr servo-thread
# spindle
addf toggle2nist.spindle servo-thread

# one extra button, tie it to pause?
#net gmc-hardware-07 gmoccapy.h-button.button-0 <= lcdbtns.button_bonus

# wire in LEDs
net mpg-x lcdbtns.xenabled
net mpg-y lcdbtns.yenabled
net mpg-z lcdbtns.zenabled
net scale1 lcdbtns.lowscaleenable
net scale2 lcdbtns.midscaleenable
net scale3 lcdbtns.highscaleenable

# Pause/resume from the bonus button
net pause-resume-btn and2.pr.in0 and2.run.in0 <= lcdbtns.button-bonus
net pause-on toggle2nist.pr.is-on and2.pr.in1 <= halui.program.is-paused
net run-on and2.run.in1 <= halui.program.is-running
net pause-sig or2.pr.in0 <= and2.pr.out
net resume-sig or2.pr.in1 <= and2.run.out
net toggle-ok toggle.ok.in <= or2.pr.out
net togglesig toggle2nist.pr.in <= toggle.ok.out
net toggleon halui.program.pause <= toggle2nist.pr.on
net toggleoff halui.program.resume <= toggle2nist.pr.off

# Spindle Button
net btn-spindle toggle2nist.spindle.in <= lcdbtns.button-spindle
net spindle-is-on toggle2nist.spindle.is-on <= halui.spindle.0.is-on
net tog-spindle-start toggle2nist.spindle.on => halui.spindle.0.start
net tog-spindle-stop toggle2nist.spindle.off => halui.spindle.0.stop

net gmc-hardware-00 gmoccapy.v-button.button-0 <= lcdbtns.v-button-0
net gmc-hardware-01 gmoccapy.v-button.button-1 <= lcdbtns.v-button-1
net gmc-hardware-02 gmoccapy.v-button.button-2 <= lcdbtns.v-button-2
net gmc-hardware-03 gmoccapy.v-button.button-3 <= lcdbtns.v-button-3
net gmc-hardware-04 gmoccapy.v-button.button-4 <= lcdbtns.v-button-4
net gmc-hardware-05 gmoccapy.v-button.button-5 <= lcdbtns.v-button-5
net gmc-hardware-06 gmoccapy.v-button.button-6 <= lcdbtns.v-button-6

net gmc-hardware-07 gmoccapy.h-button.button-0 <= lcdbtns.h-button-0
net gmc-hardware-08 gmoccapy.h-button.button-1 <= lcdbtns.h-button-1
net gmc-hardware-19 gmoccapy.h-button.button-2 <= lcdbtns.h-button-2
net gmc-hardware-10 gmoccapy.h-button.button-3 <= lcdbtns.h-button-3
net gmc-hardware-11 gmoccapy.h-button.button-4 <= lcdbtns.h-button-4
net gmc-hardware-12 gmoccapy.h-button.button-5 <= lcdbtns.h-button-5
net gmc-hardware-13 gmoccapy.h-button.button-6 <= lcdbtns.h-button-6
net gmc-hardware-14 gmoccapy.h-button.button-7 <= lcdbtns.h-button-7
net gmc-hardware-15 gmoccapy.h-button.button-8 <= lcdbtns.h-button-8
net gmc-hardware-16 gmoccapy.h-button.button-9 <= lcdbtns.h-button-9

setp gmoccapy.jog.jog-velocity.analog-enable 1
net gmc-jog-val gmoccapy.jog.jog-velocity.direct-value <= lcdbtns.jog-velocity

setp gmoccapy.feed.feed-override.analog-enable 1
net gmc-feed-val gmoccapy.feed.feed-override.direct-value <= lcdbtns.feed-override

setp gmoccapy.spindle.spindle-override.analog-enable 1
net gmc-spindle-val gmoccapy.spindle.spindle-override.direct-value <= lcdbtns.spindle-override

setp gmoccapy.rapid.rapid-override.analog-enable 1
net gmc-rapid-val gmoccapy.rapid.rapid-override.direct-value <= lcdbtns.rapid-override
